test_name: Test comments part of the posts API

stages:
  - name: create a post for the comments

    request:
      url: http://backend:8000/api/posts/
      method: POST
      json:
        creation_datetime: "2019-08-23T08:09:29.381Z"
        title: That's a post for comments
        content: I hope you like it!
        data_hash: "0x23778b46d0ebb772e6ee78e63ea7a2b1bc1cebb46d45df11aa165df0d34f51a6"

    response:
      status_code: 201
      body:
        id: !anyint
      save:
        body:
          comments_post_id: id


  - name: assert there are no comments at this point

    request:
      url: http://backend:8000/api/posts/{comments_post_id:d}/comments/
      method: GET

    response:
      status_code: 200
      strict: True
      body: []

  - name: add a comment to the post

    request:
      url: http://backend:8000/api/comments/
      method: POST
      json: &first_comment
        creation_datetime: "2019-08-23T08:09:29.381000Z"
        content: First!
        data_hash: "0xb6ce793c0237501cc12edb9edb8a0472501dfa449ccf4c70f9b2bd34e220e0ae"
        post: http://backend:8000/api/posts/{comments_post_id:d}/

    response:
      status_code: 201
      body:
        <<: *first_comment
      save:
        body:
          comment_id: id

  - name: make sure the comment is in the base

    request:
      url: http://backend:8000/api/comments/{comment_id:d}/
      method: GET

    response:
      status_code: 200
      body:
        post: http://backend:8000/api/posts/{comments_post_id:d}/
        verified: False
        content: First!

  - name: assert its is accessible via the post API

    request:
      url: http://backend:8000/api/posts/{comments_post_id:d}/comments/
      method: GET

    response:
      status_code: 200
      body:
        - <<: *first_comment

---

test_name: test comments filters

stages:
  - name: fetch all verified comments for the first post

    request:
      url: http://backend:8000/api/posts/1/comments/?verified=true
      method: GET

    response:
      status_code: 200
      body:
        - id: 1
        - id: 2

  - name: fetch all non-verified comments for the first post

    request:
      url: http://backend:8000/api/posts/1/comments/?verified=false
      method: GET

    response:
      status_code: 200
      body:
        - id: 3

  - name: invalid filter results in 400

    request:
      url: http://backend:8000/api/posts/1/comments/?verified=somebody_once_told_me
      method: GET

    response:
      status_code: 400

---

test_name: Test api returns 404 if post doesn't exist

stages:
  - name: get the number of posts

    request:
      url: http://backend:8000/api/posts/
      method: GET

    response:
      status_code: 200
      body:
        count: !anyint
      save:
        $ext:
          function: functions.utils:save_count

  - name: try to fetch comments of non-existing post

    request:
      url: "http://backend:8000/api/posts/{next_count}/comments/"
      method: GET

    response:
      status_code: 404
