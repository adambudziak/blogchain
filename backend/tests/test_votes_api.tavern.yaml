test_name: Test votes API

stages:
  - name: create a post for the votes

    request:
      url: http://backend:8000/api/posts/
      method: POST
      json:
        creation_datetime: "2019-08-23T08:09:29.381Z"
        title: That's a post for votes
        content: I hope you like it!
        data_hash: "0x29b09543fe96ab6d6d5ca9f1f63ad7ab6592144577bc9499a57d88bfa45f84f5"

    response:
      status_code: 201
      body:
        id: !anyint
      save:
        body:
          votes_post_id: id

  - name: add a comment to the post

    request:
      url: http://backend:8000/api/comments/
      method: POST
      json: &first_comment
        creation_datetime: "2019-08-23T08:09:29.381000Z"
        content: First!
        data_hash: "0xb6ce793c0237501cc12edb9edb8a0472501dfa449ccf4c70f9b2bd34e220e0ae"
        post: http://backend:8000/api/posts/{votes_post_id:d}/

    response:
      status_code: 201
      body:
        <<: *first_comment
      save:
        body:
          votes_comment_id: id

  - name: assert there are no votes at this point

    request:
      url: http://backend:8000/api/posts/{comments_post_id:d}/votes/
      method: GET

    response:
      status_code: 200
      body:
        $ext:
          function: functions.utils:assert_empty_list

  - name: login as test user

    request:
      url: http://backend:8000/api/rest-auth/login/
      method: POST
      json:
        username: admin
        password: admin

    response:
      status_code: 200
      save:
        body:
          test_user_login_token: key

  - name: vote for a post

    request:
      url: http://backend:8000/api/posts/{votes_post_id}/upvotes/
      method: POST
      headers:
        Authorization: "Token {test_user_login_token}"
      json: &first_upvote
        post: !int "{votes_post_id:d}"
        creation_datetime: "2019-08-23T08:09:29.381000Z"
        data_hash: "0x01e32c19bab22256aa7316490e6cebcb10cc89df44eb810946a66a677458e565"
        is_upvote: True

    response:
      status_code: 201
      body:
        <<: *first_upvote

  - name: assert the vote is in the database

    request:
      url: http://backend:8000/api/posts/{votes_post_id}/upvotes/
      method: GET

    response:
      status_code: 200
      body:
        - <<: *first_upvote

  - name: assert there are still no downvotes

    request:
      url: http://backend:8000/api/posts/{votes_post_id}/downvotes/
      method: GET

    response:
      status_code: 200
      strict: True
      body:
        $ext:
          function: functions.utils:assert_empty_list

  - name: vote for a comment

    request:
      url: http://backend:8000/api/comments/{votes_comment_id}/downvotes/
      method: POST
      headers:
        Authorization: "Token {test_user_login_token}"
      json: &first_downvote
        comment: !int "{votes_comment_id:d}"
        creation_datetime: "2019-08-23T08:09:29.381000Z"
        data_hash: "0xad01a2d1f1453952c6472389a7db172694f40d2137f0fc6c9976e2a91dea5bf3"
        is_upvote: False

    response:
      status_code: 201
      body:
        <<: *first_downvote

  - name: assert the vote is in the database

    request:
      url: http://backend:8000/api/comments/{votes_comment_id}/downvotes/
      method: GET

    response:
      status_code: 200
      body:
        - <<: *first_downvote

  - name: assert there are still no upvotes

    request:
      url: http://backend:8000/api/comments/{votes_comment_id}/upvotes/
      method: GET

    response:
      status_code: 200
      strict: True
      body:
        $ext:
          function: functions.utils:assert_empty_list

